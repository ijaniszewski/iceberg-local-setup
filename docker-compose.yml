services:
  rest:
    image: tabulario/iceberg-rest:1.5.0
    container_name: iceberg-rest
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    networks:
      - iceberg-net

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    ports:
      - 9000:9000
      - 9001:9001
    command: [ "server", "/data", "--console-address", ":9001" ]
    networks:
      iceberg-net:
        aliases:
          - warehouse.minio

  mc:
    depends_on:
      - minio
    image: minio/mc:RELEASE.2025-03-12T17-29-24Z
    container_name: mc
    entrypoint: |
      /bin/sh -c "
        until (/usr/bin/mc config host add minio http://minio:9000 admin password)
        do
          echo '...waiting...' && sleep 1;
        done;
        /usr/bin/mc rm -r --force minio/warehouse;
        /usr/bin/mc mb minio/warehouse;
        /usr/bin/mc policy set public minio/warehouse;
        tail -f /dev/null
      "
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    networks:
      - iceberg-net

  pyiceberg:
    build:
      context: ./pyiceberg
      dockerfile: Dockerfile
    container_name: pyiceberg
    volumes:
      - ./notebooks:/notebooks
    working_dir: /notebooks
    depends_on:
      - minio
      - rest
    ports:
      - "8888:8888"
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    networks:
      - iceberg-net

networks:
  iceberg-net:

volumes:
  minio-data:
